#!/bin/bash
#
# SLURM Job Script for HyperLaX experiments using Singularity
# Generated by launcher.py
#
#SBATCH --job-name=hyperlax
#SBATCH --partition=qc
#SBATCH --account=quxki
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=ugur.bolat@dfki.de
#SBATCH --time={{time}}
#SBATCH --mem=64G
#SBATCH --cpus-per-task=32
#SBATCH --nodes=1
#SBATCH --gres={{gres}}
#SBATCH -D /mnt/beegfs/data/QuBER-KI/hyperlax/
#SBATCH --output={{slurmlogpath}}/slurm-%j.out
{{exclude_directive}}

echo "Starting SLURM job on $(hostname)"
echo "SLURM Job ID: ${SLURM_JOB_ID}"
echo "----------------------------------------------------------------------"
# --- Define Paths ---
SINGULARITY_IMAGE_PATH="{{singularity_image_path}}"
HOST_PROJECT_ROOT="{{host_project_root}}"
CONTAINER_PROJECT_ROOT="/opt/hyperlax"
HOST_REQUIREMENTS_PATH="${HOST_PROJECT_ROOT}/requirements/requirements.txt"
echo "Singularity image: ${SINGULARITY_IMAGE_PATH}"
echo "Host project root: ${HOST_PROJECT_ROOT}"
echo "Container project root: ${CONTAINER_PROJECT_ROOT}"
echo "SLURM Log path: {{slurmlogpath}}"
echo "Command to run inside container: {{command}}"
echo "----------------------------------------------------------------------"

# Ensure the output directory exists on the host, as it will be bind-mounted.
mkdir -p {{slurmlogpath}}

start=`date +%s`
# =bash -c "..."= executes a multi-line script inside the container.
singularity exec \
    --nv \
    --bind ${HOST_PROJECT_ROOT}:${CONTAINER_PROJECT_ROOT} \
    --bind {{slurmlogpath}}:{{slurmlogpath}} \
    ${SINGULARITY_IMAGE_PATH} \
    /bin/bash -c '\
        echo "--- Inside Singularity Container ---"; \
        echo "Current directory within container: $(pwd)"; \
        source envs/hyperlax_setup.sh; \
        \
        echo "HyperLaX setup script sourced inside container."; \
        echo "PYTHONPATH (after setup script): $PYTHONPATH"; \
        \
        {{command}}
    '
runtime=$((end-start))
echo "----------------------------------------------------------------------"
echo "Runtime of SLURM job: $runtime in seconds of this job"
